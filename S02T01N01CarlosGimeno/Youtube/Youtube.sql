-- MySQL Script generated by MySQL Workbench
-- Mon Jul 11 17:34:10 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Youtube
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Youtube
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Youtube` DEFAULT CHARACTER SET utf8 ;
USE `Youtube` ;

-- -----------------------------------------------------
-- Table `Youtube`.`vídeos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`vídeos` (
  `idvídeos` INT NOT NULL,
  `títol` VARCHAR(100) NULL,
  `descripció` MEDIUMTEXT NULL,
  `tamany` INT NULL,
  `nom_arxiu_vídeo` VARCHAR(100) NOT NULL,
  `durada_vídeo` INT NOT NULL,
  `thumbnail` BLOB NULL,
  `nombre_reproduccions` INT NOT NULL,
  `nombre_likes` INT NULL,
  `nombre_dislikes` INT NULL,
  `estat_video` ENUM('privat', 'ocult', 'públic') NOT NULL,
  `data_publicació` DATE NOT NULL,
  `usuari_idusuari` INT NOT NULL,
  PRIMARY KEY (`idvídeos`),
  UNIQUE INDEX `nom_arxiu_vídeo_UNIQUE` (`nom_arxiu_vídeo` ASC) VISIBLE,
  INDEX `fk_vídeos_usuari1_idx` (`usuari_idusuari` ASC) VISIBLE,
  CONSTRAINT `fk_vídeos_usuari1`
    FOREIGN KEY (`usuari_idusuari`)
    REFERENCES `Youtube`.`usuari` (`idusuari`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`usuari`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`usuari` (
  `idusuari` INT NOT NULL,
  `email` VARCHAR(80) NOT NULL,
  `password` VARCHAR(20) NOT NULL,
  `nom_usuari` VARCHAR(45) NOT NULL,
  `data_neixament` DATE NOT NULL,
  `sexe` VARCHAR(45) NULL,
  `país` VARCHAR(45) NULL,
  `codi_postal` INT NULL,
  `vídeos_idvídeos` INT NOT NULL,
  PRIMARY KEY (`idusuari`),
  INDEX `fk_usuari_vídeos1_idx` (`vídeos_idvídeos` ASC) VISIBLE,
  CONSTRAINT `fk_usuari_vídeos1`
    FOREIGN KEY (`vídeos_idvídeos`)
    REFERENCES `Youtube`.`vídeos` (`idvídeos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`canal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`canal` (
  `idcanal` INT NOT NULL,
  `nom` VARCHAR(90) NOT NULL,
  `descripcio` MEDIUMTEXT NULL,
  `data_creació` DATE NOT NULL,
  `subscriptor` INT NOT NULL,
  `creador_idusuari` INT NOT NULL,
  UNIQUE INDEX `nom_UNIQUE` (`nom` ASC) VISIBLE,
  PRIMARY KEY (`idcanal`),
  INDEX `fk_canal_usuari1_idx` (`creador_idusuari` ASC) VISIBLE,
  CONSTRAINT `fk_canal_usuari1`
    FOREIGN KEY (`creador_idusuari`)
    REFERENCES `Youtube`.`usuari` (`idusuari`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`etiqueta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`etiqueta` (
  `idetiqueta` INT NOT NULL,
  `nom` VARCHAR(45) NOT NULL,
  `vídeos_idvídeos` INT NOT NULL,
  PRIMARY KEY (`idetiqueta`),
  INDEX `fk_etiqueta_vídeos1_idx` (`vídeos_idvídeos` ASC) VISIBLE,
  CONSTRAINT `fk_etiqueta_vídeos1`
    FOREIGN KEY (`vídeos_idvídeos`)
    REFERENCES `Youtube`.`vídeos` (`idvídeos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`like/dislike_video`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`like/dislike_video` (
  `idlikes` INT NOT NULL,
  `usuari_idusuari` INT NOT NULL,
  `vídeos_idvídeos` INT NOT NULL,
  `like/dislike` VARCHAR(7) NOT NULL,
  `date` DATE NULL,
  INDEX `fk_likes_usuari1_idx` (`usuari_idusuari` ASC) VISIBLE,
  INDEX `fk_likes_vídeos1_idx` (`vídeos_idvídeos` ASC) VISIBLE,
  PRIMARY KEY (`idlikes`),
  CONSTRAINT `fk_likes_usuari1`
    FOREIGN KEY (`usuari_idusuari`)
    REFERENCES `Youtube`.`usuari` (`idusuari`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_likes_vídeos1`
    FOREIGN KEY (`vídeos_idvídeos`)
    REFERENCES `Youtube`.`vídeos` (`idvídeos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`comentari`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`comentari` (
  `idcomentari` INT NOT NULL,
  `text` LONGTEXT NOT NULL,
  `data_comentari` DATE NOT NULL,
  `usuari_idusuari` INT NOT NULL,
  `vídeos_idvídeos` INT NOT NULL,
  PRIMARY KEY (`idcomentari`),
  INDEX `fk_comentari_usuari1_idx` (`usuari_idusuari` ASC) VISIBLE,
  INDEX `fk_comentari_vídeos1_idx` (`vídeos_idvídeos` ASC) VISIBLE,
  CONSTRAINT `fk_comentari_usuari1`
    FOREIGN KEY (`usuari_idusuari`)
    REFERENCES `Youtube`.`usuari` (`idusuari`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comentari_vídeos1`
    FOREIGN KEY (`vídeos_idvídeos`)
    REFERENCES `Youtube`.`vídeos` (`idvídeos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`PlayList`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`PlayList` (
  `idPlayList` INT NOT NULL,
  `nom` VARCHAR(45) NULL,
  `data_creació` DATE NOT NULL,
  `estat` ENUM('pública', 'privada') NOT NULL,
  `usuari_idusuari` INT NOT NULL,
  `vídeos_idvídeos` INT NOT NULL,
  PRIMARY KEY (`idPlayList`),
  INDEX `fk_PlayList_usuari1_idx` (`usuari_idusuari` ASC) VISIBLE,
  INDEX `fk_PlayList_vídeos1_idx` (`vídeos_idvídeos` ASC) VISIBLE,
  CONSTRAINT `fk_PlayList_usuari1`
    FOREIGN KEY (`usuari_idusuari`)
    REFERENCES `Youtube`.`usuari` (`idusuari`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PlayList_vídeos1`
    FOREIGN KEY (`vídeos_idvídeos`)
    REFERENCES `Youtube`.`vídeos` (`idvídeos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`subscripcions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`subscripcions` (
  `canal_idcanal` INT NOT NULL,
  `usuari_idusuari` INT NOT NULL,
  PRIMARY KEY (`canal_idcanal`, `usuari_idusuari`),
  INDEX `fk_canal_has_usuari_usuari1_idx` (`usuari_idusuari` ASC) VISIBLE,
  INDEX `fk_canal_has_usuari_canal1_idx` (`canal_idcanal` ASC) VISIBLE,
  CONSTRAINT `fk_canal_has_usuari_canal1`
    FOREIGN KEY (`canal_idcanal`)
    REFERENCES `Youtube`.`canal` (`idcanal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_canal_has_usuari_usuari1`
    FOREIGN KEY (`usuari_idusuari`)
    REFERENCES `Youtube`.`usuari` (`idusuari`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`like/dislike_comentari`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`like/dislike_comentari` (
  `idlike/dislike_comentari` INT NOT NULL,
  `like/dislike` VARCHAR(7) NOT NULL,
  `usuari_idusuari` INT NOT NULL,
  `comentari_idcomentari` INT NOT NULL,
  `data` DATE NULL,
  PRIMARY KEY (`idlike/dislike_comentari`),
  INDEX `fk_like/dislike_comentari_usuari1_idx` (`usuari_idusuari` ASC) VISIBLE,
  INDEX `fk_like/dislike_comentari_comentari1_idx` (`comentari_idcomentari` ASC) VISIBLE,
  CONSTRAINT `fk_like/dislike_comentari_usuari1`
    FOREIGN KEY (`usuari_idusuari`)
    REFERENCES `Youtube`.`usuari` (`idusuari`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_like/dislike_comentari_comentari1`
    FOREIGN KEY (`comentari_idcomentari`)
    REFERENCES `Youtube`.`comentari` (`idcomentari`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
